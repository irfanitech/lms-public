Jenkins file 
pipeline {
    agent{
       label 'docker'
    }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('dockeruser')
     registry = "irfanit/backend-lms"
        registryCredential = 'dockeruser'
       
    }

    stages {
        
        
        stage('Building the docker image') {
            steps {
                sh 'cd api && docker build -t irfanit/backend-lms .'
            }
        }
        stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('pushing the docker image into dockerhub') {
            steps {
                  sh 'docker push irfanit/backend-lms'
            }
        }
        stage('Remove old docker images') {
             steps {
                 sh 'docker rmi -f irfanit/backend-lms'
            }
        }
         stage('creating database container') {
             steps {
                 sh 'docker container rm --force lmsdb1'
                 sh 'docker run -d -p 5432:5432 --network lmsnetwork1 -e  POSTGRES_PASSWORD=password --name lmsdb1 postgres'
            }
        }
         stage('Running the docker container') {
            steps {
                  sh 'docker container rm --force backend'
                  sh 'docker run -d -p 8080:8080 --network lmsnetwork1 -e DATABASE_URL=postgresql://postgres:password@lmsdb1:5432/postgres --name backend -e PORT=8080 -e MODE=local  irfanit/backend-lms'
            }
        }
    }
}
